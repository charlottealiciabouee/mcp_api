import unittest
from fastapi.testclient import TestClient
from main import app

client = TestClient(app)

#tests for GET, POST, PUT, DELETE endpoints
class TestAPIEndpoints(unittest.TestCase):

    #GET method test
    def test_health_check(self):
        response = client.get("/health")
        self.assertEqual(response.status_code, 200)
        self.assertEqual(response.json(), {"status": "healthy"})

    #POST method test
    def test_post_inference_valid(self):
        payload = {"input_data": "Hello MCP"}
        response = client.post("/inference", json=payload)
        self.assertEqual(response.status_code, 201)
        self.assertEqual(response.json(), {
            "input": "Hello MCP",
            "output": "Inferred: Hello MCP"
        })

    #test for invalid POST request
    def test_post_inference_invalid(self):
        payload = {}
        response = client.post("/inference", json=payload)
        self.assertEqual(response.status_code, 422)

    #PUT method test
    def test_put_update_inference(self):
        payload = {"input_data": "Updated info"}
        response = client.put("/inference/42", json=payload)
        self.assertEqual(response.status_code, 200)
        self.assertEqual(response.json(), {
            "item_id": 42,
            "updated_data": "Updated info",
            "message": "Item successfully updated!"
        })

    #DELETE method test
    def test_delete_inference(self):
        response = client.delete("/inference/42")
        self.assertEqual(response.status_code, 200)
        self.assertEqual(response.json(), {"message": "Item 42 successfully deleted."})

if __name__ == "__main__":
    unittest.main()